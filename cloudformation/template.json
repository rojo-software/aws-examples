{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS example code, REST API on Dynamo",
  "Resources": {
    "ProcessorLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${DeploymentBucket}.s3.${AWS::Region}.amazonaws.com/aws-example/templates/lambda.template.json"
        },
        "Parameters": {
          "ApiId": {
            "Ref": "Api"
          },
          "AppName": {
            "Ref": "AppName"
          },
          "DeploymentBucket": {
            "Ref": "DeploymentBucket"
          },
          "DynamoTableName": {
            "Ref": "DynamoTableName"
          },
          "FunctionType": "processor",
          "StageName": {
            "Ref": "DeploymentName"
          }
        }
      }
    },
    "AuthorizerLambdaStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${DeploymentBucket}.s3.${AWS::Region}.amazonaws.com/aws-example/templates/lambda.template.json"
        },
        "Parameters": {
          "ApiId": {
            "Ref": "Api"
          },
          "AppName": {
            "Ref": "AppName"
          },
          "DeploymentBucket": {
            "Ref": "DeploymentBucket"
          },
          "DynamoTableName": {
            "Ref": "DynamoTableName"
          },
          "FunctionType": "authorizer",
          "StageName": {
            "Ref": "DeploymentName"
          }
        }
      }
    },
    "Api": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "aws-example",
        "Description": "Example of API Gateway deployment",
        "ProtocolType": "HTTP"
      }
    },
    "Authorizer": {
      "Type": "AWS::ApiGatewayV2::Authorizer",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": {
          "Fn::Sub": [
            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaName}/invocations",
            {
              "LambdaName": {
                "Fn::GetAtt": [
                  "AuthorizerLambdaStack",
                  "Outputs.LambdaName"
                ]
              }
            }
          ]
        },
        "AuthorizerPayloadFormatVersion": "2.0",
        "EnableSimpleResponses": "true",
        "Name": "LambdaBasicAuth",
        "IdentitySource": [
          "$request.header.authorization"
        ]
      }
    },
    "Integration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "ProcessorLambdaStack",
            "Outputs.LambdaArn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "DocumentRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "Authorizer"
        },
        "RouteKey": "GET /document",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "Integration"
              }
            ]
          ]
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "Api"
        },
        "AutoDeploy": "true",
        "StageName": {
          "Ref": "DeploymentName"
        }
      }
    }
  },
  "Parameters": {
    "AppName": {
      "Type": "String",
      "Default": "aws-example"
    },
    "DynamoTableName": {
      "Type": "String",
      "Default": "example"
    },
    "DeploymentBucket": {
      "Type": "String",
      "Default": "rojo-software-deployment",
      "Description": "Name of S3 bucket for deployment artifacts"
    },
    "DeploymentName": {
      "Type": "String",
      "Default": "dev",
      "Description": "Deployment name"
    }
  }
}

